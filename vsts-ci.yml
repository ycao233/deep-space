# Maven
# Build your Java projects and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/java
queue: 'Default'

steps:
#- task: DownloadSecureFile@1
#  displayName: 'Download secure file'
#  inputs:
#    secureFile: '213a46b5-c4d4-4ba8-a8e4-e4f63c59b0b8'
  
- powershell: |
#    cat C:\Agent\yacao-z4\_work\_temp\mysecret.txt
#    write-host "##vso[build.updatebuildnumber]yacao-fork-($env:buildId)"
    Set-Content -Path '.\fork_access_token.txt' -Value ($env:accesstoken)
    echo ($env:secret)
  env:
    accesstoken: $(system.accesstoken)  
    buildId: $(build.buildId)
    secret: $(MyVariableGroupSecret)

- task: JenkinsDownloadArtifacts@1
  displayName: 'Download artifacts produced by ycao233Test'
  inputs:
    jenkinsServerConnection: 'old_jenkins'
    jobName: ycao233Test
     
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    # codeCoverageToolOption: Cobertura

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.war'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
